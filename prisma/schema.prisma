// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  username   String      @unique
  password   String
  name       String
  characters Character[] @relation("UserCharacters")
}

model Character {
  id          Int              @id @default(autoincrement())
  name        String           @unique
  health      Int
  power       Int
  money       Int
  userId      Int
  User        User             @relation("UserCharacters", fields: [userId], references: [id])
  inventory   Inventory[]      @relation("CharacterInventory")
  items       CharacterItem[] @relation("CharacterItems")
}

model Item {
  id          Int              @id @default(autoincrement())
  item_code   Int              @unique
  item_name   String
  item_stat   Json
  item_price  Int
  inventory   Inventory[]      @relation("ItemInventory")
  characters  CharacterItem[] @relation("ItemCharacterItems")
}

model Inventory {
  id           Int       @id @default(autoincrement())
  character_id Int
  item_code    Int
  quantity     Int
  character    Character @relation("CharacterInventory", fields: [character_id], references: [id])
  item         Item      @relation("ItemInventory", fields: [item_code], references: [item_code])
}

model CharacterItem {
  id          Int      @id @default(autoincrement())
  characterId Int
  itemCode    Int
  Character   Character @relation("CharacterItems", fields: [characterId], references: [id])
  Item        Item      @relation("ItemCharacterItems", fields: [itemCode], references: [item_code])
  @@unique([characterId, itemCode])
}